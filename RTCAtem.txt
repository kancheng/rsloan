set.seed(929)
getwd()

# R Kan Dev Function IO
source("C:/dataipt/rfunc/io.R")

# R Kan Dev Function HCA
source("C:/dataipt/rfunc/hca.R")

# R Multiple graphs on one page 
source("C:/dataipt/rfunc/mulggplotpic.R")

# R Kan Dev Function AS Class & Head List
source("C:/dataipt/rfunc/ashd.R")

# R Kan Dev Function Pic Opt
source("C:/dataipt/rfunc/picopt.R")

# Data input CSV file
dataipth = "C:/dataipt/lhucmdt/lhumlndcw70"

# Data output CSV file
dataopth = "C:/dataopt/lhucmdt"

# Data coldf input CSV file
dfcolipth = "C:/dataipt/lhucmdt/dfsubjab/csv"

# input DF
rcsvdf(dataipth)

# input coldf Data
rcsvdf(dfcolipth)

# input List
lhudata = rcsvlt(dataipth)

#######################
# ClusterAnalysis Data#
#######################

# Cluster Analysis Base colnames 
hacbdt = c( "cala","loam","ec", "cppg")

# Cluster Analysis PKey colnames 
pkb = c( "sid")

###########################
# ClusterAnalysis Function#
###########################

hclust.methods = c("ward.D", "single", "complete", "average", "mcquitty", "median", "centroid", "ward.D2")
dist.methods = c("euclidean", "maximum", "manhattan", "canberra", "binary" , "minkowski")

# HCA conform
# Use serna, hcadpic, hcad CA R Function
# Odata 為資料來源的 DF
# beky 根據資料來源的 DF 下，進行集群分群基礎的直行名稱。
# keycol 根據資料來源的 DF 下，進行集群分群基礎的 PK 直行名稱。
# serna 為給 DataFrame 產生 HCA 分群基準資料。
# hck 為集群分析的分群群數
# hcm 為分群的方法
# dism 為分群的距離計算方式

hcaon = function( Odata, beky, keycol, hck = 5, hcm = "ward.D", dism = "euclidean",
	dtname = "untitled", swd = getwd(),...){

	hcktem = hck
	hcmtem = hcm
	dismtem = dism

	serna = function( data, beky, keycol){
		tdfnm = rep(1:nrow(data))
		pkb = data[ , keycol]
		temdf = data.frame( bnm = tdfnm, bpk = pkb)
		hcabd = data[ , beky]
		nap = vector( mode = "character", length = 0)
		for( i in 1:NCOL(hcabd)) {
			nam = paste0("base", i, ".", beky[i])
			nap = c( nap, nam)
		}
		names(hcabd) = nap
		hcal2d = cbind( temdf, hcabd)
		hcal2d
	}

# HCA Data DF IN
	data = serna( Odata, beky, keycol)
	dhdc = data[ , -c(1, 2)]
	hcadata = hcad( hcdata = dhdc, hck = hcktem, hcm = hcmtem, dism = dismtem)

# HCA pic
	piophdn = paste0( dtname, ".png")
	hcadpic( hcdata = dhdc, hck = hcktem, hcm = hcmtem, dism = dismtem)

# HCA Data DF OUT
	hcad2 = cbind(data,hcadata)
	hcbsdtnm = paste0("hcbs", dtname)
	assign( hcbsdtnm, 
		hcad2
	, env = .GlobalEnv)

# Cluster DF Cut
	hchartem = vector(mode = "character", length = 0)
	for(i in 1:hck) {
		nam = paste0("hc", i, dtname)
		hchartem = c( hchartem, nam)
		temhc = hcad2[hcad2$hcadata == i, ]$bpk
		temodt = Odata$sid
		assign( nam, 
		Odata[ which( temodt %in% temhc), ]
		, env = .GlobalEnv)
	}

# TukeyHSD & ANOVA Base Data
	hcbsdtavtna = paste0(dtname,"avt")
	hcbsdtavtem = merge( hcad2, Odata, by.x = "bpk", by.y = "sid", all = TRUE)
	assign( hcbsdtavtna,
		hcbsdtavtem
	, env = .GlobalEnv)

# TukeyHSD & ANOVA CSV process

	optkavtm =  data.frame( tsnm = character(), 
		term = character(), 
		comparison = character(), 
		estimate = numeric(), 
		conf.low = numeric(), 
		conf.high = numeric(), 
		adj.p.value = numeric())
	tukavpc = which(c("sid","loam")%in% names(Odata))
	tukavtm = Odata[ , -tukavpc]
	alalt = as.list(tukavtm)
	tarname  = colnames(tukavtm)

	# Factor process
	tmtkab = factor(hcad2$hcadata)

	# Merge DF process
	for( j in 1:ncol(tukavtm)){
		temdf  = tidy ( TukeyHSD(aov( alalt[[j]] ~ tmtkab ) , "tmtkab"))
		temdf  = cbind( tsnm = rep(tarname[j]) ,temdf)
		optkavtm = rbind(optkavtm, temdf) 
	}
	tuacsvopn = paste0(dtname,"tkav")
	assign( tuacsvopn,
		optkavtm
	, env = .GlobalEnv)

# The Descriptive Statistics of each Cluster

		dscdf = Odata[,-which( c("sid","loam")%in% names(Odata))]
		dscpkycol = names(dscdf)
	for(dscnm in 1:2){
		loanstatus = c(0,1)
		eckallds =  data.frame( 
		subj = character(), club = character(), slon = numeric(), 
		minimum = numeric(), q1 = numeric(), median = numeric(), 
		mean = numeric(), q3 = numeric(), maximum = numeric(), 
		na = numeric(), sd = numeric())

		for(ecnum in 1:length(dscpkycol)){
			temcsdf =  data.frame( 
				subj = character(), club = character(), slon = numeric(), 
				minimum = numeric(), q1 = numeric(), median = numeric(), 
				mean = numeric(), q3 = numeric(), maximum = numeric(), 
				na = numeric(), sd = numeric())
				dscfprc.col = dscpkycol[ecnum]

			for( dsclunb in 1:hck){
				tarsut = paste0("Clu.", dsclunb)
				dsc.commands = paste0( hchartem[dsclunb],"[",hchartem[dsclunb], "$loam == ", loanstatus[dscnm], ",]", "$", dscfprc.col)
				dsctemd = eval(parse(text = dsc.commands))
				temsummary = tidy(summary( dsctemd, na.rm = TRUE))
				temsd = sd( dsctemd, na.rm = TRUE)
				ecopthd = cbind( subj = dscfprc.col, club = tarsut, slon = loanstatus[dscnm], temsummary, sd = temsd)
				temcsdf = rbind(temcsdf,ecopthd)
			}
		eckallds = rbind(eckallds, temcsdf)
		}

		dscnach = paste0(dtname,"ln", loanstatus[dscnm],"dsc")
		assign( dscnach,
			eckallds
		, env = .GlobalEnv)
	}

# Number of Student Loans
	slonbsdf = data.frame( dtna = character(), club = character(), 
			slon = numeric(), no.slon = numeric(), 
			total = numeric())

	for( slon2b in 1:hck){
		slonclut = paste0("Clu.", slon2b)
		slon.commands = paste0( "NROW(", hchartem[slon2b],"[",hchartem[slon2b],"$loam == 1, ]", ")" )
		noslon.commands = paste0( "NROW(",hchartem[slon2b],"[",hchartem[slon2b],"$loam == 0, ]", ")" )
		total.commands = paste0( "NROW(", hchartem[slon2b], ")" )
		slon.evalp = eval(parse(text = slon.commands))
		noslon.evalp = eval(parse(text = noslon.commands))
		total.evalp = eval(parse(text = total.commands))
		slontmhd = cbind( dtna = dtname, club = slonclut, slon = slon.evalp, no.slon = noslon.evalp, total = total.evalp)
		slonbsdf = rbind( slonbsdf, slontmhd)
	}
	slonaopc = paste0(dtname,"slon")
		assign( slonaopc,
			slonbsdf
		, env = .GlobalEnv)

# The Descriptive Statistics of each Cluster
# no Student loans condition

		dscdf = Odata[,-which( c("sid","loam")%in% names(Odata))]
		dscpkycol = names(dscdf)
		eckallds =  data.frame( 
		subj = character(), club = character(), minimum = numeric(), 
		q1 = numeric(), median = numeric(), mean = numeric(), 
		q3 = numeric(), maximum = numeric(), 
		na = numeric(), sd = numeric())

		for(ecnum in 1:length(dscpkycol)){
			temcsdf =  data.frame( 
				subj = character(), club = character(), slon = numeric(), 
				minimum = numeric(), q1 = numeric(), median = numeric(), 
				mean = numeric(), q3 = numeric(), maximum = numeric(), 
				na = numeric(), sd = numeric())
				dscfprc.col = dscpkycol[ecnum]

			for( dsclunb in 1:hck){
				tarsut = paste0("Clu.", dsclunb)
				dsc.commands2 = paste0(hchartem[dsclunb],"$",dscpkycol[ecnum])
				dscfprc.data = eval(parse(text = dsc.commands2))
				temsummary = tidy(summary( dscfprc.data, na.rm = TRUE))
				temsd = sd( dscfprc.data, na.rm = TRUE)
				ecopthd = cbind( subj = dscfprc.col, club = tarsut, temsummary, sd = temsd)
				temcsdf = rbind(temcsdf,ecopthd)
			}
		eckallds = rbind(eckallds, temcsdf)
		}

		dsach = paste0(dtname,"al2ndsc")
		assign( dsach,
			eckallds
		, env = .GlobalEnv)

}



# test
# hcaon(im13,  hacbdt, pkb, dtname = "im13")
# hcaon(im11,  hacbdt, pkb, dtname = "im11")